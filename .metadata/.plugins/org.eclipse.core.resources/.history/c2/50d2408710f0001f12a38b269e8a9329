package service;

import bean.ExerciseRecord;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;
import java.sql.*;
import daoo.ExerciseRecordDAO;


public class ExerciseRecordService {

    private static final String JNDI_NAME = "java:/comp/env/jdbc/topicTWOdb"; 

    private Connection getConnection() throws SQLException, NamingException {
        InitialContext context = new InitialContext();
        DataSource ds = (DataSource) context.lookup(JNDI_NAME);
        return ds.getConnection();
    }

    // 計算卡路里並儲存運動紀錄
    public void addExerciseRecord(ExerciseRecord record) throws SQLException, NamingException {
        // 取得用戶體重
        float userWeight = getUserWeight(record.getUserId());

        if (userWeight == 0) {
            throw new SQLException("User weight not found!");
        }

        // 取得運動類型的METS值（調用DAO層）
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            float metValue = dao.getMETSValue(record.getExerciseType());

            if (metValue == 0) {
                throw new SQLException("METS value not found for exercise type: " + record.getExerciseType());
            }

            // 計算卡路里
            float exerciseDurationInHours = record.getExerciseDuration() / 60.0f;  // 將運動時間轉換為小時
            int caloriesBurned = (int) (userWeight * metValue * exerciseDurationInHours);

            // 設定計算出的卡路里
            record.setCaloriesBurned(caloriesBurned);

            // 儲存運動紀錄到資料庫
            dao.addExerciseRecord(record);  // 確保在DAO層有此方法
        }
    }

    // 取得用戶體重
    private float getUserWeight(int userId) throws SQLException, NamingException {
        String query = "SELECT weight FROM users WHERE user_id = ?";
        try (Connection conn = getConnection();  // 使用getConnection獲取連接
             PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setInt(1, userId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getFloat("weight");
                }
            }
        }
        return 0;
    }
}
