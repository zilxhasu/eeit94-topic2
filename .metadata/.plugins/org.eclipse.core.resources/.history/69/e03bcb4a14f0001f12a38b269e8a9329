package service;

import bean.ExerciseRecord;
import daoo.ExerciseRecordDAO;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;
import java.sql.*;
import java.util.List;

public class ExerciseRecordService {

    private static final String JNDI_NAME = "java:/comp/env/jdbc/topicTWOdb"; 

    // 獲取資料庫連接
    private Connection getConnection() throws SQLException, NamingException {
        InitialContext context = new InitialContext();
        DataSource ds = (DataSource) context.lookup(JNDI_NAME);
        return ds.getConnection();
    }

    // 新增運動紀錄
    public boolean addExerciseRecord(ExerciseRecord record) throws SQLException, NamingException {
        // 計算卡路里
        int caloriesBurned = calculateCaloriesBurned(record);
        record.setCaloriesBurned(caloriesBurned); // 設定計算出的卡路里

        // 儲存運動紀錄
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            return dao.addExerciseRecord(record); // 呼叫 DAO 層的新增方法
        }
    }

    // 更新運動紀錄
    public boolean updateExerciseRecord(ExerciseRecord record) throws SQLException, NamingException {
        // 計算卡路里
        int caloriesBurned = calculateCaloriesBurned(record);
        record.setCaloriesBurned(caloriesBurned); // 設定計算出的卡路里

        // 更新運動紀錄
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            return dao.updateExerciseRecord(record); // 呼叫 DAO 層的更新方法
        }
    }

    // 計算卡路里
    private int calculateCaloriesBurned(ExerciseRecord record) throws SQLException, NamingException {
        // 取得用戶體重
        float userWeight = getUserWeight(record.getUserId());
        if (userWeight == 0) {
            throw new SQLException("User weight not found!");
        }

        // 取得運動類型的 METS 值
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            float metValue = dao.getMETSValue(record.getExerciseType());

            if (metValue == 0) {
                throw new SQLException("METS value not found for exercise type: " + record.getExerciseType());
            }

            // 計算卡路里
            float exerciseDurationInHours = record.getExerciseDuration() / 60.0f; // 將運動時間轉換為小時
            return (int) (userWeight * metValue * exerciseDurationInHours);
        }
    }

    // 取得用戶體重
    private float getUserWeight(int userId) throws SQLException, NamingException {
        String query = "SELECT Weight FROM BodyMetrics WHERE UserID = ?";
        try (Connection conn = getConnection(); // 使用getConnection獲取連接
             PreparedStatement ps = conn.prepareStatement(query)) {
            ps.setInt(1, userId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getFloat("weight");
                }
            }
        }
        return 0;
    }

    // 刪除運動紀錄
    public boolean deleteExerciseRecord(int recordId) throws SQLException, NamingException {
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            return dao.deleteExerciseRecord(recordId); // 呼叫 DAO 層的刪除方法
        }
    }

    // 查詢用戶的所有運動紀錄
    public List<ExerciseRecord> getExerciseRecords(int userId) throws SQLException, NamingException {
        try (Connection conn = getConnection()) {
            ExerciseRecordDAO dao = new ExerciseRecordDAO(conn);
            return dao.getExerciseRecords(userId); // 呼叫 DAO 層的查詢方法
        }
    }
}
